#version 300 es

layout(location = 0) in vec3 position;
layout(location = 1) in vec2 texCoord;
layout(location = 2) in vec3 normal;

out vec2 texCoord0;
out vec3 vertexPosition;
smooth out vec3 N; // normal in viewspace

uniform mat4 modelMat;
uniform mat4 viewMat;
uniform mat4 projectionMat;
uniform mat4 normalMat;

void main()
{
	vec4 projectedVertex = viewMat * modelMat * vec4(position, 1.0);
	//N =  mat3( modelMat) * normal;
	N = normalize((normalMat * vec4(normal, 0.0)).xyz);
	
	texCoord0 = texCoord;
	vertexPosition = vec3(projectedVertex) / projectedVertex.w;
	gl_Position = (projectionMat * viewMat * modelMat) * vec4(position, 1.0);	
}