#version 300 es

layout(location = 0) in vec3 position;
layout(location = 1) in vec2 texCoord;
layout(location = 2) in vec3 normal;

out vec2 texCoord0;
out vec3 vertexPosition;
smooth out vec3 N; // normal in viewspace
out float pass_time;
out mat4 pass_normalMat;
out mat4 pass_modelViewMat;

uniform mat4 modelMat;
uniform mat4 viewMat;
uniform mat4 projectionMat;
uniform mat4 normalMat;
uniform float time;

void main()
{
	vec4 projectedVertex = viewMat * modelMat * vec4(position, 1.0);
	N = normal;
	texCoord0 = texCoord;
	vertexPosition = vec3(projectedVertex) / projectedVertex.w;
	gl_Position = (projectionMat * viewMat * modelMat) * vec4( position, 1.0);	
	pass_time = time;
	pass_normalMat = normalMat;
	pass_modelViewMat = viewMat * modelMat;
}