#version 300 es

in vec3 position;
in vec2 texCoord;
in vec3 normal;

out vec2 texCoord0;
out vec3 N; // normal in viewspace
out vec3 V; // view vector
out vec3 L; // light vector

uniform vec3 lightPosition;
uniform vec3 lightDirection;
uniform mat4 modelMat;
uniform mat4 viewMat;
uniform mat4 projectionMat;
uniform mat4 normalMat;

void main()
{
	vec4 P = viewMat * modelMat * vec4(position, 1.0);

	N =  mat3(viewMat * modelMat) * normal;
	//N = normalize((normalMat * vec4(normal, 0.0)).xyz);

	L = lightPosition - position;//P.xyz;
	//switch L comment to toggle lightdirection from above
	//L = lightDirection;

	V = normalize(-(P.xyz / P.w));
	L = normalize(L);
	texCoord0 = texCoord;

	gl_Position = (projectionMat * viewMat * modelMat) * vec4(position, 1.0);	
}